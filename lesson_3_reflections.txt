When would you want to use a remote repository rather than keeping all your work local?

Remote repositories allow you to easily share your work and collaborate with others. Much
like other cloud storage, remote repositories also protect you from local computer failure.

Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?

To phrase this slightly differently: why wouldn't you want Git to automatically pull
all changes from your remote repository? One reason I can think of is that, if you
use your remote repository as the 'public-ready version' of your project, you might
be working on conflicting features in your local repository. This is fine, until Git
tries to pull a bugfix you made to your public repository that conflicts with your
new feature.

I don't think this is a totally satisfactory answer, I'm hoping to see more in the
upcoming lesson.

Describe the differences between forks, clones, and branches. 
When would you use one instead of another?

1. Branches are separate lines of commits stemming from a single shared origin point.
They exist in a single repository.

2. Clones are complete copies of a repository.

3. Forks are clones of a repository that are stored on GitHub with some nice additional
features like attribution and contributor permissions.

You would use branches to differentiate features or paths within a single project. You
would use a fork to publicly start your own variation on someone else's project. Clones
are used to make a local copy of a project for your own personal use, but are not the
standard way to collaborate with GitHub.